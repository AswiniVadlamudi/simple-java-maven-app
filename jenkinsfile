pipeline {
    agents{
        docker {
            image 'maven:3-alpine' 
            args '-v /root/.m2:/root/.m2' 
        }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout'
            }
        }
        stage('Build') {
            steps {
                echo 'Clean Build'
		withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']){
                sh 'mvn clean compile'
		}
            }
        }
        stage('Test') {
            steps {
	    	withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']){
                echo 'Testing'
                sh 'mvn test'
		}
            }
        }
        //stage('JaCoCo') {
          //  steps {
            //    echo 'Code Coverage'
              //  jacoco()
            //}
        //}
        stage('Sonar') {
            steps {
                echo 'Sonar Scanner'
               	//def scannerHome = tool 'SonarQube Scanner 6.0'
		  // withSonarQubeEnv('SonarQube Server') {
			 
				sh "mvn sonar:sonar -Dsonar.host.url=http://35.227.88.186:9000"
			   // }
            }
        }
        stage('Package') {
            steps {
                echo 'Packaging'
                sh 'mvn package -DskipTests'
            }
        }
        stage('Deploy') {
            steps {
                sh "-Psonatype -Darguments=-DskipTests -DreleaseVersion=${version} -DdevelopmentVersion=${pom.version} -DpushChanges=false -DlocalCheckout=true -DpreparationGoals=initialize release:prepare release:perform -B"
            }
        }
    }
    
    post {
        always {
            echo 'JENKINS PIPELINE'
        }
        success {
            echo 'JENKINS PIPELINE SUCCESSFUL'
        }
        failure {
            echo 'JENKINS PIPELINE FAILED'
        }
        unstable {
            echo 'JENKINS PIPELINE WAS MARKED AS UNSTABLE'
        }
        changed {
            echo 'JENKINS PIPELINE STATUS HAS CHANGED SINCE LAST EXECUTION'
        }
    }
}
}
